homicides <- readLines("homicides.txt")
r <- regexec(paste("<dd>.*, ",age," years old</dd>", homicides)
m <- regmatches(homicides, r)
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
r <- regexec(paste("<dd>.*, ",age," years old</dd>"), homicides)
m <- regmatches(homicides, r)
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
r <- regexec(paste("<dd>.*, ",age," years old</dd>"), homicides)
m <- regmatches(homicides, r)
count(m)
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
r <- regexec(paste("<dd>.*, ",age," years old</dd>"), homicides)
m <- regmatches(homicides, r)
nrow(m)
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
r <- regexec(paste("<dd>.*, ",age," years old</dd>"), homicides)
m <- regmatches(homicides, r)
length(m)
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
regex <- paste("<dd>.*, ",age," years old</dd>")
print(regex)
r <- regexec(regex, homicides)
m <- regmatches(homicides, r)
length(m)
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
regex <- paste("<dd>.*,",age,"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
m <- regmatches(homicides, r)
length(m)
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
regex <- paste("<dd>.?*,",age,"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
m <- regmatches(homicides, r)
length(m)
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
regex <- paste("<dd>.*?,",age,"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
m <- regmatches(homicides, r)
length(m)
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
regex <- paste("<dd>.*?\,",age,"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
m <- regmatches(homicides, r)
length(m)
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
regex <- paste("<dd>(.*?),",age,"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
m <- regmatches(homicides, r)
length(m)
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
regex <- paste("<dd>(.*?)",age,"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
m <- regmatches(homicides, r)
length(m)
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
head(homicides)
regex <- paste("<dd>(.*?)",age,"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
m <- regmatches(homicides, r)
length(m)
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
head(homicides)
regex <- paste("<dd>(.*?)",age,"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
m <- regmatches(homicides, r)
length(m)
}
agecount(3)
homicides <- readLines("homicides.txt")
head(homicides)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
head(homicides)
regex <- paste(age,"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
m <- regmatches(homicides, r)
length(m)
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
head(homicides)
regex <- paste(as.character(age),"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
m <- regmatches(homicides, r)
length(m)
}
agecount(3)
m <- regmatches(homicides, r)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
head(homicides)
regex <- paste(as.character(age),"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
m <- regmatches(homicides, r)
print(m)
length(m)
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
head(homicides)
regex <- paste(as.character(age),"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
m <- regmatches(homicides, r)
m
length(m)
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
head(homicides)
regex <- paste(as.character(age),"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
m <- regmatches(homicides, r)
str(m)
length(m)
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
head(homicides)
regex <- paste(" ", as.character(age),"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
m <- regmatches(homicides, r)
str(m)
length(m)
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
head(homicides)
regex <- paste(as.character(age),"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
m <- regmatches(homicides, r)
str(m)
length(m)
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
head(homicides)
regex <- paste(as.character(age),"years old</dd>")
print(regex)
r <- regexpr(regex, homicides)
str(r)
length(r)
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
head(homicides)
regex <- paste(as.character(age),"years old</dd>")
print(regex)
r <- regexpr(regex, homicides)
str(r)
length(r['match.length' > 0])
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
head(homicides)
regex <- paste(as.character(age),"years old</dd>")
print(regex)
r <- regexpr(regex, homicides)
length(r)
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
head(homicides)
regex <- paste(as.character(age),"years old</dd>")
print(regex)
r <- regexc(regex, homicides)
length(r)
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
head(homicides)
regex <- paste(as.character(age),"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
length(r)
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
head(homicides)
regex <- paste(as.character(age),"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
r
}
agecount(3)[1]
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
head(homicides)
regex <- paste(as.character(age),"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
r
}
str(agecount(3))
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
head(homicides)
regex <- paste(as.character(age),"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
sapply(r, function(el) el > 0)
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
head(homicides)
regex <- paste(as.character(age),"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
Filter(function(x) x > 0, r)
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
head(homicides)
regex <- paste(" ",as.character(age),"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
Filter(function(x) x > 0, r)
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
head(homicides)
regex <- paste(" ",as.character(age),"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
length(Filter(function(x) x > 0, r))
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
regex <- paste(" ",as.character(age),"years old</dd>")
r <- regexec(regex, homicides)
length(Filter(function(x) x > 0, r))
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
regex <- paste(" ",as.character(age),"years old</dd>")
r <- regexec(regex, homicides)
length(Filter(function(x) x > 0, r))
}
agecount(31)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
regex <- paste(" ",as.character(age),"years old</dd>")
r <- regexec(regex, homicides)
length(Filter(function(x) x > 0, r))
}
agecount(21)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
regex <- paste(" ",as.character(age),"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
length(Filter(function(x) x > 0, r))
}
agecount(21)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
regex <- paste(",",as.character(age),"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
length(Filter(function(x) x > 0, r))
}
agecount(21)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
regex <- paste(",",as.character(age),"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
length(Filter(function(x) x > 0, r))
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
regex <- paste(",.*?",as.character(age),"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
length(Filter(function(x) x > 0, r))
}
agecount(3)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
regex <- paste(",.*?",as.character(age),"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
length(Filter(function(x) x > 0, r))
}
agecount(21)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
regex <- paste(",.*?",as.character(age),"years old</dd>")
print(regex)
r <- regexec(regex, homicides)
length(Filter(function(x) x > 0, r))
}
agecount(21)
source("agecount.R")
source("http://spark-public.s3.amazonaws.com/compdata/scripts/submitscript4.R")
submit()
submit()
setwd("~/projects/wal/r-learning/coursera/compdata/assignment_4/")
source("count.R")
count("other")
count("unknown")
source("agecount.R")
agecount(3)
agecount(21)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
regex <- paste(",.*?",as.character(age),"years old</dd>")
length(grep(regex, homicides))
}
agecount(21)
agecount <- function(age = NULL) {
if(is.null(age)) {
stop("Age cannot be null")
}
homicides <- readLines("homicides.txt")
regex <- paste(",.*?",as.character(age),"years old</dd>")
length(grep(regex, homicides))
}
agecount(3)
